apply plugin: 'com.android.library'
android {
    compileSdkVersion 26
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 26
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    packagingOptions {
        exclude 'overview-summary.html'
    }
}

dependencies {
    implementation files('libs/mlert.jar')
    implementation files('libs/mlmath.jar')
    implementation files('libs/parts.jar')
    implementation files('libs/roles.jar')
    implementation files('libs/stages.jar')
    testImplementation 'junit:junit:4.12'

}

// Task to delete the old jar.
task deleteOldJar(type: Delete){
    delete 'release/sets.jar'
}

// Task to export contents as jar.
task exportJar(type: Copy){
    from('build/intermediates/packaged-classes/release/')
    into('release/')
    include('classes.jar')
    // Rename the jar.
    rename('classes.jar', 'sets.jar')
}

exportJar.dependsOn(deleteOldJar, build)

// Task to generate jar containing sources
task generateSourcesJar (type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

// Task to delete the old jar
task deleteSourcesJar(type: Delete){
    delete 'libs/sets-sources.jar'
}

task exportSourcesJar(type: Copy){
    from('build/libs/')
    into('release/')
    include('app-sources.jar')
    // Rename the jar.
    rename('app-sources.jar', 'sets-sources.jar')
}

exportSourcesJar.dependsOn(deleteSourcesJar, generateSourcesJar)

artifacts {
    archives generateSourcesJar
}